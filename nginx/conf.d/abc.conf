upstream demo_server {
        server 172.31.34.250:8080 fail_timeout=0;
    }
# Expires map
  map $sent_http_content_type $expires {
    default                    off;
    text/html                  epoch;
    text/css                   max;
    application/javascript     3600;
    ~image/                    max;
}
#include /etc/nginx/*.limt;
include /etc/nginx/blockuseragents.rules;
server {
       if ($blockedagent) {
          return 403;
       }
       listen         80;
       listen        [::]:80;
       expires $expires;
       server_tokens off;
       server_name    vishalcloud.ml www.vishalcloud.ml; 
      # return         301 https://$server_name$request_uri;
        return         301 https://$server_name; #this will stop user to access http in between https session
       
       
}     
    server {
        if ($blockedagent) {
          return 403;
       }
        if ($request_method !~ ^(GET|HEAD|POST)$) {
          return 444;
       }
        server_name vishalcloud.ml;
        listen 443 ssl http2 ;
        listen [::]:443 ssl http2 ;
        expires $expires;
        
        #ssl on;
        ##ssl enable OCSP Stapling
        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate /var/certs/demo/ssl_stapling.entrust.crt;
        ##logs
        error_log    /var/log/nginx/SITES_LOGS/demo/error_demo.log;
        access_log   /var/log/nginx/SITES_LOGS/demo/error_demo.log;
        #ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
        ssl_protocols TLSv1.2;
      	ssl_certificate /var/certs/demo/demo_cert.pem;
        ssl_certificate_key /var/certs/demo/demo_key.pem;
        ssl_buffer_size 8k;
        ssl_session_timeout 5m;
        # Generated Diffie-Hellman group location
        ssl_dhparam /var/certs/dhparam4096.pem;
        ssl_session_cache shared:SSL:10m;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains;" always;
        ssl_prefer_server_ciphers on;
        ssl_ciphers "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";
        ssl_ecdh_curve secp384r1;
        ##DNS
        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 10s;
        #########
        include             /etc/nginx/mime.types;
        default_type        application/octet-stream;
        #compression
	gzip on;
	gzip_disable "msie6";
	gzip_vary on;
	gzip_proxied any;
	gzip_comp_level 6;
	gzip_buffers 16 8k;
	gzip_http_version 1.1;
 	gzip_min_length 256;
	gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/vnd.ms-fontobject application/x-font-ttf font/opentype image/bmp image/png image/gif image/jpeg image/jpg image/svg+xml image/x-icon;
        # hide nginx version 
          server_tokens off;
          proxy_pass_header Server1;
        # config to don't allow the browser to render the page inside a frame or iframe
          add_header X-Frame-Options DENY;
        # to disable content-type sniffing on some browsers.
          add_header X-Content-Type-Options nosniff;
        # Enables the Cross-site scripting (XSS) filter
          add_header X-XSS-Protection "1; mode=block";
          proxy_hide_header X-Powered-By;
           	
           

    location / {
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://demo_server;
#
        proxy_http_version 1.1;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cookie_path /ibs-jsp "/; secure; HttpOnly";
        proxy_intercept_errors on;
        error_page 500 501 502 503 504 506 507 508 509 510 511 /usr/share/nginx/html/50x.html;
        error_page 404 /usr/share/nginx/html/404.html;
          }
            location ~/admin/ { 
            #allow 192.168.0.0/24 ;
            allow  all;
            }
#       location /404.html {
#         internal;
#            }
   }
